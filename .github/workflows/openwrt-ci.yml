＃
＃這是免費軟件，可以使用MIT。
＃ 
＃版權所有（C）2019 P3TERX <https://p3terx.com>
＃版權所有（C）2019 KFERMercer <KFER.Mercer@gmail.com>
＃ 
＃ <https://github.com/KFERMercer/OpenWrt-CI>
＃

名稱：OpenWrt-CI

在：
  推送：
    分支機構：
      - 大師
  時間表：
      -cron：0 20 * * *
  發布：
      類型：[已發布]

職位：

  build_openwrt：

    名稱：建立OpenWrt
    運行：ubuntu-latest
    如果：github.event.repository.owner.id == github.event.sender.id

    步驟：

      - 名稱：結帳
        用途：actions / checkout @ master
        與：
          參考：大師

      - 名稱：清理空間
        env：
          DEBIAN_FRONTEND：非互動
        運行：|
          docker rmi`docker images -q`
          須藤rm -rf / usr / share / dotnet / etc / mysql / etc / php /etc/apt/sources.list.d
          須藤-E apt-get -y清除azure-cli ghc * zulu * hhvm llvm * firefox google * dotnet * powershell openjdk * mysql * php *
          sudo -E apt-get更新
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g ++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf
          須藤-E apt-get -y autoremove --purge
          須藤-E apt-get clean
          ＃sudo mkdir -p -m 777 / mnt / openwrt / bin / mnt / openwrt / build_dir / host / mnt / openwrt / build_dir / hostpkg / mnt / openwrt / dl / mnt / openwrt / feeds / mnt / openwrt / staging_dir
          ＃ln -s / mnt / openwrt / bin ./bin
          ＃mkdir -p ./build_dir/host && ln -s / mnt / openwrt / build_dir / host ./build_dir/host
          ＃mkdir -p ./build_dir/host && ln -s / mnt / openwrt / build_dir / hostpkg ./build_dir/hostpkg
          ＃ln -s / mnt / openwrt / dl ./dl
          ＃ln -s / mnt / openwrt / feeds ./feeds
          ＃ln -s / mnt / openwrt / staging_dir ./staging_dir
          df -h
      - 名稱：更新供稿
        運行：|
          ./scripts/feeds更新-a
          ./scripts/feeds install -a
      - 名稱：生成配置文件
        運行：|
          rm -f ./.config*
          觸摸./.config
          ＃
          ＃=======================固件定制部分====================== ==
          ＃ 
          ＃ 
          ＃如果不對本區塊鏈所做的任何編輯，則應生成默認配置固件。 
          ＃ 
          ＃以下為定制化固件選項和說明：
          ＃
          ＃
          ＃某些插件/選項是重置開啟的，如果想要關閉，請參照以下示例進行編寫：
          ＃ 
          ＃========================================
          ＃| ＃取消編譯VMware實質：|
          ＃| cat >> .config << EOF |
          ＃| ＃未設置CONFIG_VMDK_IMAGES |
          ＃| EOF |
          ＃========================================
          ＃
          ＃ 
          ＃以下是一些提前準備好的一些插件選項。
          ＃直接取消註釋相應代碼塊即可應用。不要取消註釋代碼塊上的漢字說明。
          ＃如果不需要代碼塊裡的某某配置，只需要刪除相應行。
          ＃
          ＃如果需要其他插件，請按照示例自行添加。
          ＃注意，只需添加依賴鏈末端的包。如果你需要插件A，同時A依賴B，即只需要添加A.
          ＃ 
          ＃任何您想要對固件進行怎樣的定制，都需要且只需要修改EOF回環內的內容。
          ＃ 
          ＃編譯x64固件：
          ＃cat >> .config << EOF
          ＃CONFIG_TARGET_x86 = y
          ＃CONFIG_TARGET_x86_64 = y
          ＃CONFIG_TARGET_x86_64_Generic = y
          ＃EOF
          ＃固件壓縮：
          ＃cat >> .config << EOF
          ＃CONFIG_TARGET_IMAGES_GZIP = y
          ＃EOF
          ＃編譯UEFI固件：
          ＃cat >> .config << EOF
          ＃CONFIG_EFI_IMAGES = y
          ＃EOF
          ＃IPv6支持：
          ＃cat >> .config << EOF
          ＃CONFIG_PACKAGE_dnsmasq_full_dhcpv6 = y
          ＃CONFIG_PACKAGE_ipv6helper = y
          ＃EOF
          ＃多文件系統支持：
          ＃cat >> .config << EOF
          ＃CONFIG_PACKAGE_kmod-fs-nfs = y
          ＃CONFIG_PACKAGE_kmod-fs-nfs-common = y
          ＃CONFIG_PACKAGE_kmod-fs-nfs-v3 = y
          ＃CONFIG_PACKAGE_kmod-fs-nfs-v4 = y
          ＃CONFIG_PACKAGE_kmod-fs-ntfs = y
          ＃CONFIG_PACKAGE_kmod-fs-squashfs = y
          ＃EOF
          ＃USB3.0支持：
          ＃cat >> .config << EOF
          ＃CONFIG_PACKAGE_kmod-usb-ohci = y
          ＃CONFIG_PACKAGE_kmod-usb-ohci-pci = y
          ＃CONFIG_PACKAGE_kmod-usb2 = y
          ＃CONFIG_PACKAGE_kmod-usb2-pci = y
          ＃CONFIG_PACKAGE_kmod-usb3 = y
          ＃EOF
          ＃常用LuCI插件選擇：
          ＃cat >> .config << EOF
          ＃CONFIG_PACKAGE_luci-app-adbyby-plus = y
          ＃CONFIG_PACKAGE_luci-app-aria2 = y
          ＃CONFIG_PACKAGE_luci-app-baidupcs-web = y
          ＃CONFIG_PACKAGE_luci-app-docker = y
          ＃CONFIG_PACKAGE_luci-app-frpc = y
          ＃CONFIG_PACKAGE_luci-app-kodexplorer = y
          ＃CONFIG_PACKAGE_luci-app-minidlna = y
          ＃CONFIG_PACKAGE_luci-app-openvpn = y
          ＃CONFIG_PACKAGE_luci-app-openvpn-server = y
          ＃CONFIG_PACKAGE_luci-app-qbittorrent = y
          ＃CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Kcptun = y
          ＃CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks = y
          ＃CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Server = y
          ＃CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Socks = y
          ＃CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray = y
          ＃CONFIG_PACKAGE_luci-app-ttyd = y
          ＃CONFIG_PACKAGE_luci-app-v2ray-server = y
          ＃CONFIG_PACKAGE_luci-app-verysync = y
          ＃CONFIG_PACKAGE_luci-app-webadmin = y
          ＃CONFIG_PACKAGE_luci-app-wireguard = y
          ＃CONFIG_PACKAGE_luci-app-wrtbwmon = y
          ＃EOF
          ＃LuCI主題：
          ＃cat >> .config << EOF
          ＃CONFIG_PACKAGE_luci-theme-argon = y
          ＃CONFIG_PACKAGE_luci-theme-netgear = y
          ＃EOF
          ＃常見缺點：
          ＃cat >> .config << EOF
          ＃CONFIG_PACKAGE_curl = y
          ＃CONFIG_PACKAGE_htop = y
          ＃CONFIG_PACKAGE_nano = y
          ＃CONFIG_PACKAGE_screen = y
          ＃CONFIG_PACKAGE_tree = y
          ＃CONFIG_PACKAGE_vim-fuller = y
          ＃CONFIG_PACKAGE_wget = y
          ＃EOF
          ＃取消編譯VMware常規以及補充（不要刪除被縮進的註釋符號）：
          ＃cat >> .config << EOF
          ＃＃未設置CONFIG_TARGET_IMAGES_PAD
          ＃＃CONFIG_VMDK_IMAGES未設置
          ＃EOF
          ＃ 
          ＃========================固件定制部分結束===================== ===
          ＃ 
          sed -i's / ^ [\ t] * // g'./.config
          使defconfig
      - 名稱：下載
        運行：|
          下載-j8 || 下載-j1 V = s
          找到./dl/ -size -1024c -exec rm -f {} \;
          df -h
      - 名稱：編譯固件
        運行：|
          使-j $（nproc）|| 使-j1 V = s
          迴聲“ ======================
          回顯“空間使用情況：”
          迴聲“ ======================
          df -h
          迴聲“ ======================
          du -h ./ --max-depth = 1
          du -h / mnt / openwrt / --max-depth = 1 || 真正
      - 名稱：準備神器
        運行：查找./bin/targets/ -type d -name“ packages” | xargs rm -rf {}

      - 名稱：上傳config.seed
        用途：actions / upload-artifact @ master
        與：
          名稱：config.seed
          路徑：./bin/targets/*/*/config.seed

      - 名稱：上傳固件
        用途：actions / upload-artifact @ master
        與：
          名稱：OpenWrt_firmware
          路徑：./bin/targets/